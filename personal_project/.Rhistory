equation <- function(x,y){exp{-(x^2y^2 + x^2 + y^2 -8x -8y)/2}/C}
#plot equation
ggplot(data.frame(x=c(1, 50)), aes(x=x)) +
stat_function(fun=my_equation)
multi_var_fx <- function (x, y) {
exp{-(x^2y^2 + x^2 + y^2 -8x -8y)/2}/C
}
z <- outer(x, y, multi_var_fx)
contour(x, y, z, xlab = 'x', ylab = 'y')
multi_var_fx <- function (x, y) {
exp(-(x^2y^2 + x^2 + y^2 -8x -8y)/2)/C
}
library(tidyverse)
multi_var_fx <- function (x, y) {
exp(-(x^2y^2 + x^2 + y^2 -8x -8y)/2)/C
}
tibble(x = seq(0, 10, 0.1),             # define the drawing grid
y = seq(0, 10, 0.1)
) %>%
cross_df() %>%                          # create all possible combinations of x and y
mutate(z = 7*x*y/(exp(x^2+y^2)) ) %>%   # add your function
ggplot(aes(x = x, y = y, z = z)) +      # create the plot
geom_contour()
tibble(x = seq(0, 10, 0.1),             # define the drawing grid
y = seq(0, 10, 0.1)
) %>%
cross_df() %>%                          # create all possible combinations of x and y
mutate(z = exp(-(x^2y^2 + x^2 + y^2 -8x -8y)/2)/C ) %>%   # add your function
ggplot(aes(x = x, y = y, z = z)) +      # create the plot
geom_contour()
tibble(x = seq(0, 10, 0.1),             # define the drawing grid
y = seq(0, 10, 0.1)
) %>%
cross_df() %>%                          # create all possible combinations of x and y
mutate(z = exp(-(x^2y^2 + x^2 + y^2 -8x -8y)/2)) %>%   # add your function
ggplot(aes(x = x, y = y, z = z)) +      # create the plot
geom_contour()
tibble(x = seq(0, 10, 0.1),             # define the drawing grid
y = seq(0, 10, 0.1)
) %>%
cross_df() %>%                          # create all possible combinations of x and y
mutate(z = exp(-(x^2y^2 + x^2 + y^2 -8x -8y)/2)) %>%   # add your function
ggplot(aes(x = x, y = y, z = z)) +      # create the plot
geom_contour()
tibble(x = seq(0, 10, 0.1),             # define the drawing grid
y = seq(0, 10, 0.1)
) %>%
cross_df() %>%                          # create all possible combinations of x and y
mutate(z = exp(-(x^2*y^2 + x^2 + y^2 -8x -8y)/2)) %>%   # add your function
ggplot(aes(x = x, y = y, z = z)) +      # create the plot
geom_contour()
x <- seq(from = 0.01, to = 2.1, by = 0.01)
y <- x
multi_var_fx <- function (x, y) {
7 * x * y / (exp(x^2 + y^2))
}
z <- outer(x, y, multi_var_fx)
contour(x, y, z, xlab = 'x', ylab = 'y')
z = = 1/C * exp(-(x^2**y^2 + x^2 + y^2 -8x -8y)/2)
tibble(x = seq(0, 10, 0.1),             # define the drawing grid
y = seq(0, 10, 0.1)
) %>%
cross_df() %>%                          # create all possible combinations of x and y
mutate(z) %>%   # add your function
ggplot(aes(x = x, y = y, z = z)) +      # create the plot
geom_contour()
z = = 1/C * exp(-(x^2**y^2 + x^2 + y^2 -8x -8y)/2)
plot(z)
ggplot(aes(x = x, y = y, z = z)) +      # create the plot
geom_contour()
f = = 1/C * exp(-(x^2**y^2 + x^2 + y^2 -8x -8y)/2)
z <- outer(x, y, f)
contour(x, y, z, xlab = 'x', ylab = 'y')
f = = 1/C * exp(-(x^2**y^2 + x^2 + y^2 -8x -8y)/2)
z <- outer(x, y, f)
contour(x, y, z, xlab = 'x', ylab = 'y')
x <- seq(from = 0.01, to = 8, by = 0.1)
y <- x
f = = 1/C * exp(-(x^2**y^2 + x^2 + y^2 -8x -8y)/2)
z <- outer(x, y, f)
contour(x, y, z, xlab = 'x', ylab = 'y')
x <- seq(from = 0.01, to = 8, by = 0.1)
y <- x
#assume c = 1
f = exp(-(x^2**y^2 + x^2 + y^2 -8x -8y)/2)
z <- outer(x, y, f)
contour(x, y, z, xlab = 'x', ylab = 'y')
f = exp(-(x^2**y^2 + x^2 + y^2 -8x -8y)/2)
f = exp(-(x^2*y^2 + x^2 + y^2 -8x -8y)/2)
f = exp(-(x^2 * y^2 + x^2 + y^2 - 8x - 8y)/2)
z = exp(-(x^2 * y^2 + x^2 + y^2 - 8x - 8y)/2)
f <- function (x, y) {
exp(-(x^2*y^2 + x^2 + y^2 - 8x - 8y)/2)
}
#assume c = 1
f <- function (x, y) {
exp(-(x^2*y^2 + x^2 + y^2 - 8x - 8y)/2)
}
library(tidyverse)
f <- function (x, y) {
exp(-(x^2 * y^2 + x^2 + y^2 - 8x - 8y)/2)
}
f <- function (x, y) {
exp(x^2 + y^2)
}
#assume c = 1
f <- function (x, y) {
exp(-(x^2 + y^2))
}
x <- seq(from = 0.01, to = 8, by = 0.1)
y <- x
#assume c = 1
f <- function (x, y) {
exp(-(x^2 + y^2))
}
z <- outer(x, y, f)
contour(x, y, z, xlab = 'x', ylab = 'y')
f <- function (x, y) {
exp(-(x^2y^2 + x^2 + y^2 -8x -8y))
}
f <- function (x, y) {
exp(-(x^2 * y^2 + x^2 + y^2 -8x -8y))
}
f <- function (x, y) {
exp(-(x^2 + y^2 -8x -8y))
}
#assume c = 1
f <- function (x, y) {
exp(-(x^2 + y^2-8x-8y))
}
f <- function (x, y) {
exp(-(x^2 + y^2 - 8x - 8y))
}
exp(-(x^2 + y^2))
#assume c = 1
f <- function (x, y) {
exp(-(x^2 + y^2))
}
f <- function (x, y) {
exp(-(x^2 + x^2 + y^2))
}
#assume c = 1
f <- function (x, y) {
exp(-(x^2 * 1 + x^2 + y^2))
}
f <- function (x, y) {
exp(-(x^2 * y^2 + x^2 + y^2))
}
f <- function (x, y) {
exp(-(x^2 * y^2 + x^2 + y^2 - 8))
}
f <- function (x, y) {
exp(-(x^2 * y^2 + x^2 + y^2 - 8x))
}
f <- function (x, y) {
exp(-(x^2 * y^2 + x^2 + y^2 - 8*x))
}
#assume c = 1
f <- function (x, y) {
exp(-(x^2 * y^2 + x^2 + y^2 - 8*x - 8*y))
}
x <- seq(from = 0.01, to = 8, by = 0.1)
y <- x
#assume c = 1
f <- function (x, y) {
exp(-(x^2 * y^2 + x^2 + y^2 - 8*x - 8*y))
}
z <- outer(x, y, f)
contour(x, y, z, xlab = 'x', ylab = 'y')
x <- seq(from = -2, to = 8, by = 0.1)
y <- x
#assume c = 1
f <- function (x, y) {
exp(-(x^2 * y^2 + x^2 + y^2 - 8*x - 8*y))
}
z <- outer(x, y, f)
contour(x, y, z, xlab = 'x', ylab = 'y')
x <- seq(from = -1, to = 6, by = 0.1)
y <- x
#assume c = 1
f <- function (x, y) {
exp(-(x^2 * y^2 + x^2 + y^2 - 8*x - 8*y))
}
z <- outer(x, y, f)
contour(x, y, z, xlab = 'x', ylab = 'y')
x <- seq(from = -1, to = 6, by = 0.1)
y <- x
#assume c = 1
f <- function (x, y) {
exp(-(x^2 * y^2 + x^2 + y^2 - 8*x - 8*y))
}
z <- outer(x, y, f)
tibble(x = seq(0, 10, 0.1),             # define the drawing grid
y = seq(0, 10, 0.1)
) %>%
cross_df() %>%                          # create all possible combinations of x and y
mutate(z) %>%   # add your function
ggplot(aes(x = x, y = y, z = z)) +      # create the plot
geom_contour()
x <- seq(from = -1, to = 6, by = 0.1)
y <- x
#assume c = 1
f <- function (x, y) {
exp(-(x^2 * y^2 + x^2 + y^2 - 8*x - 8*y))
}
z <- outer(x, y, f)
contour(x, y, z, xlab = 'x', ylab = 'y')
x <- seq(from = -1, to = 6, by = 0.1)
y <- x
#assume c = 1
f <- function (x, y) {
exp(-(x^2 * y^2 + x^2 + y^2 - 8*x - 8*y))
}
z <- outer(x, y, f)
contour(x, y, z, xlab = 'x', ylab = 'y')
x <- seq(from = -0.5, to = 5.5, by = 0.1)
y <- x
#assume c = 1
f <- function (x, y) {
exp(-(x^2 * y^2 + x^2 + y^2 - 8*x - 8*y))
}
z <- outer(x, y, f)
contour(x, y, z, xlab = 'x', ylab = 'y')
BiocManager::install("ggtree")
library(ggtree)
install.packages("phylogram")
install.package(‘igraph’)
install.package("igraph")
install.packages("igraph")
library(igraph)
library(ggraph)
setwd("../Desktop/lipasto/StatisticalAndProbabilisticProgramming/personal_project")
